version: '3.8'

services:
  # =============================================================================
  # Neo4j Graph Database
  # =============================================================================
  neo4j:
    image: neo4j:5.15-community
    container_name: seo_content_neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial_size=512m
      - NEO4J_dbms_memory_heap_max_size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_connector_bolt_listen_address=:7687
      - NEO4J_dbms_connector_http_listen_address=:7474
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - seo_content_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # =============================================================================
  # Qdrant Vector Database
  # =============================================================================
  qdrant:
    image: qdrant/qdrant:v1.8.0
    container_name: seo_content_qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - seo_content_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # =============================================================================
  # Supabase (Local Development)
  # =============================================================================
  supabase-db:
    image: supabase/postgres:15.1.0.147
    container_name: seo_content_supabase_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
    networks:
      - seo_content_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  supabase-auth:
    image: supabase/gotrue:v2.132.3
    container_name: seo_content_supabase_auth
    ports:
      - "9999:9999"
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgres://postgres:postgres@supabase-db:5432/postgres?sslmode=disable
      - GOTRUE_SITE_URL=http://localhost:3000
      - GOTRUE_URI_ALLOW_LIST=http://localhost:3000,http://localhost:8000
      - GOTRUE_JWT_SECRET=your-jwt-secret-at-least-32-characters-long
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_JWT_DEFAULT_GROUP_NAME=authenticated
      - GOTRUE_EXTERNAL_EMAIL_ENABLED=true
      - GOTRUE_MAILER_AUTOCONFIRM=true
      - GOTRUE_SMTP_HOST=smtp.gmail.com
      - GOTRUE_SMTP_PORT=587
      - GOTRUE_SMTP_USER=your-email@gmail.com
      - GOTRUE_SMTP_PASS=your-app-password
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - seo_content_network

  # =============================================================================
  # SearXNG Search Engine
  # =============================================================================
  searxng:
    image: searxng/searxng:latest
    container_name: seo_content_searxng
    ports:
      - "8080:8080"
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080
      - SEARXNG_SECRET_KEY=your-secret-key-for-searxng
    volumes:
      - searxng_data:/etc/searxng
    networks:
      - seo_content_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # =============================================================================
  # Redis (Caching and Background Tasks)
  # =============================================================================
  redis:
    image: redis:7.2-alpine
    container_name: seo_content_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --replica-read-only no
    volumes:
      - redis_data:/data
    networks:
      - seo_content_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # Prometheus (Metrics Collection)
  # =============================================================================
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: seo_content_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - seo_content_network

  # =============================================================================
  # Grafana (Metrics Visualization)
  # =============================================================================
  grafana:
    image: grafana/grafana:10.2.0
    container_name: seo_content_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - seo_content_network

  # =============================================================================
  # Celery Worker (Background Tasks)
  # =============================================================================
  celery-worker:
    build: .
    container_name: seo_content_celery_worker
    command: celery -A services.celery_app worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
    volumes:
      - .:/app
    networks:
      - seo_content_network
    profiles:
      - full

  # =============================================================================
  # Celery Beat (Scheduled Tasks)
  # =============================================================================
  celery-beat:
    build: .
    container_name: seo_content_celery_beat
    command: celery -A services.celery_app beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
    volumes:
      - .:/app
    networks:
      - seo_content_network
    profiles:
      - full

  # =============================================================================
  # Flower (Celery Monitoring)
  # =============================================================================
  flower:
    build: .
    container_name: seo_content_flower
    command: celery -A services.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
    volumes:
      - .:/app
    networks:
      - seo_content_network
    profiles:
      - full

# =============================================================================
# Volumes
# =============================================================================
volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  qdrant_data:
    driver: local
  supabase_db_data:
    driver: local
  searxng_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# =============================================================================
# Networks
# =============================================================================
networks:
  seo_content_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16